8/15
まず何から考えればよいか考えた結果、変数の受け渡しやAPIの取得はなんとなくわかるので、UIをどのような形にするのかライブラリは何を使うのかを考えるところから始めることにする。

10/11
TODOリスト
- ディレクトリ構成を考える
　- 構成に合わせるために関数を汎用性の高いものに変えていく
  - bulletproof-reactのディレクトリ構成を参考する
  　https://zenn.dev/meijin/articles/bulletproof-react-is-best-architecture
    https://zenn.dev/t_keshi/articles/bulletproof-react-2022
  - setPostを引数にしたときのデータ型をどうするか考える
    →types内に汎用データ型として記述する方がよい？
  - apiディレクトリ構成をバックエンドのモデルと同じ構成にする
  - postsForm.tsxは汎用的なファイルにできるかもなので、汎用コンポーネント用のディレクトリを作る方がいいかもしれない
  - EsLintの設定を行う
  →サバイバルTypeScriptで試してみてから使ってみる
  - object型を使っている変数をRecord<key, value>に変更する
  - postのデータ型を型推論で設定させる
  - FoodListのstateをcreateContextでまとめる
  - Provider用のディレクトリを作成してグローバルstateを管理しやすくする
  - Provider用のディレクトリはcompornent直下に作る
  - グローバルである必要がないProviderは各ページに専用tsxファイルを作成する
    
- create-react-app におけるjestテストについて調べる

- loginフォームを別途作成する